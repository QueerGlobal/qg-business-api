openapi: "3.0.0"
info:
  version: '0.0.1'
  title: QueerGlobal Businesses API
  description: An api for businesses in for the QueerGlobal system
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://queerglobal.com/api
paths:
  /healthcheck:
    get:
      summary: Healthcheck for this API
      description: Healthcheck for server status
      operationId: InternalHealthCheck
      responses:
        '200':
          description: Response to healthchecks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /businesses/{id}:
    get:
      summary: Returns a business by ID
      description: Returns a business based on a single ID
      operationId: FindBusinessById
      parameters:
        - name: id
          in: path
          description: ID of business to fetch
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: business response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a business by ID
      description: deletes a single business based on the ID supplied
      operationId: delete business
      parameters:
        - name: id
          in: path
          description: ID of business to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: business deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a business
      description: Updates business. Duplicates are allowed
      operationId: UpdateBusiness
      parameters:
        - name: id
          in: path
          description: ID of business to delete
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Business to update to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
      responses:
        '200':
          description: business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /businesses:
    post:
      summary: Creates a new business
      description: Creates a new business. Duplicates are allowed
      operationId: AddBusiness
      requestBody:
        description: Business to add to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
      responses:
        '200':
          description: business
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Returns businesses based on query strings
      description: Returns businesses based on query strings
      operationId: FindBusinesss
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: primarycategoryID
          in: query
          description: ID of category to fetch
          required: false
          schema:
            type: integer
            format: int64
        - name: categoryID
          in: query
          description: ID of category to fetch
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: page number of to return
          required: false
          schema:
            type: integer
            format: int32

      responses:
        '200':
          description: business response
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/BusinessResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    HealthCheckResponse:
      type: object
      required: 
        - status
        - serviceName
      properties: 
        status: 
          type: string
        serviceName:
          type: string


    Business:
      type: object
      required:
        - BusinessID
        - ResourceID
        - Type
        - Status
      properties: 
        BusinessID:
          type: string
          format: uuid
        ResourceID:
          type: string
          format: uuid
        Type:
          type: string
        Status:
          type: integer
          format: int32
          minimum: 1
          maximum: 255
          default: 1
        Objects:
          type: array
          items:
            $ref: '#/components/schemas/Object'
        Images:
          type: array
          items:
            $ref: '#/components/schemas/Image'

    BusinessResponse:
      type: object
      required:
        - BusinessID
        - Status
      properties: 
        BusinessID:
          type: string
          format: uuid
        Status:
          type: string

    Image:
      type: object
      required:
        - ImageID
        - ImageName
        - Link
      properties: 
        ImageID:
          type: string
          format: uuid
        ImageName:
          type: string
        Link:
          type: string
          format: uri

    Object:
      type: object
      required:
        - ObjectTypeID
        - Object
      properties: 
        ObjectID:
          type: string
          format: uuid
        ObjectName:
          type: string
        ObjectType:
          type: string
        ObjectTypeID:
          type: integer
          format: int64
        Object:
          type: object


    Category:
      type: object
      required:
        - CategoryName 
      properties: 
        CategoryID:
          type: string
          format: uuid
        CategoryName:
          type: string
        CategoryDescription:
          type: string

    Chip:
      required:
        - value
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string


    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
          description: Error code
        message:
          type: string
          description: Error message
